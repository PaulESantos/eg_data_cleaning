# Stage 1 cleaning

```{r}
#| echo: false
#| message: false
library(readxl)
library(tidyverse)
library(janitor)
library(here)
```


```{r}
#| echo: false
df_raw <- read_excel(
  path = here("data", "messy_uc.xlsx"),
  sheet = "Data",
  skip = 5
)
```


## Variable names

Original variable names in excel: 

![](images/var_names_1.PNG)

. . .

<br>

Variable names import as shown, with modifications from `readxl::read_excel()` to ensure uniqueness:

![](images/var_names_2.PNG)



## Variable names, cleaner

Variable names as imported:

![](images/var_names_2.PNG)

. . .

<br>

`janitor::clean_names()` removes special characters and implements snake case by default:


```{r}
#| eval: false
df_raw |> janitor::clean_names() 
```

![](images/var_names_3.PNG)

## Remove empty columns or rows


::: panel-tabset

### Problem

```{r}
#| eval: true
df_raw |> 
  janitor::clean_names() |> 
  select(pat_id, race:start_bp) |> 
  slice(13:18)
```

### Solution

```{r}
#| eval: true
#| code-line-numbers: "3"
df_raw |> 
  janitor::clean_names() |> 
  janitor::remove_empty(which = c("rows", "cols")) |> 
  select(pat_id, race:start_bp) |> 
  slice(13:18)
```

### Confirm

::: columns
::: {.column width="35%"}
```{r}
#
df_raw |>
  janitor::clean_names() |> 
  glimpse()
```
:::

::: {.column width="65%"}
```{r}
df_raw |> 
  janitor::clean_names() |> 
  janitor::remove_empty(which = c("rows", "cols")) |> 
  glimpse()
```
:::

:::

:::


## Recoding

::: panel-tabset

### Problem


```{r}
df_clean <- df_raw |>
  janitor::clean_names() |> 
  janitor::remove_empty(which = c("rows", "cols"))

df_clean |> 
  count(ethnic)
```


### Solution

```{r}
#| code-line-numbers: 4-9
df_clean <- df_raw |>
  janitor::clean_names() |> 
  janitor::remove_empty(which = c("rows", "cols")) |> 
  mutate(
    ethnic_clean = case_when(
      ethnic %in%  c("hispanic", "Hispanic", "hispamnic") ~ "hispanic",
      ethnic %in%  c("NOT hispanic", "not hispanic") ~ "not hispanic",
    )
  )

df_clean |> 
  count(ethnic_clean)
```


### Confirm

```{r}
df_clean |> 
  count(ethnic_clean, ethnic)
```

:::

## Replace values with missing



::: panel-tabset

### Problem

::: columns

::: {.column width="50%"}

```{r}
df_clean |> 
  count(end_na) 
```

:::

::: {.column width="50%"}

```{r}
df_clean |> 
  ggplot(aes(x = end_na)) +
  geom_histogram()
```
:::

:::

### Solution

```{r}
#| code-line-numbers: "9"
df_clean <- df_raw |>
  janitor::clean_names() |> 
  janitor::remove_empty(which = c("rows", "cols")) |> 
  mutate(
    ethnic_clean = case_when(
      ethnic %in%  c("hispanic", "Hispanic", "hispamnic") ~ "hispanic",
      ethnic %in%  c("NOT hispanic", "not hispanic") ~ "not hispanic",
    ),
    end_na_clean = na_if(end_na, -99)
  ) 
```


### Confirm

::: columns

::: {.column width="50%"}

```{r}
df_clean |> 
  count(end_na, end_na_clean) 
```

:::

::: {.column width="50%"}

```{r}
df_clean |> 
  ggplot(aes(x = end_na_clean)) +
  geom_histogram()
```
:::

:::

:::


## Incorrect variable type


::: panel-tabset

### Problem


::: columns

::: {.column width="50%"}

```{r}
df_raw |> 
  select(end_emo) |> 
  glimpse()
```

<br>


::: {.fragment}
```{r, warning = TRUE}
mean(df_raw[["end_emo"]], na.rm = TRUE)
```
:::

:::

::: {.column width="50%" .fragment}

```{r}
df_raw[["end_emo"]]
```

:::

:::


### Solution

```{r}
#| code-line-numbers: "10"
df_clean <- df_raw |>
  janitor::clean_names() |> 
  janitor::remove_empty(which = c("rows", "cols")) |> 
  mutate(
    ethnic_clean = case_when(
      ethnic %in%  c("hispanic", "Hispanic", "hispamnic") ~ "hispanic",
      ethnic %in%  c("NOT hispanic", "not hispanic") ~ "not hispanic",
    ),
    end_na_clean = na_if(end_na, -99),
    end_emo_clean = na_if(end_emo, "not done") |> as.numeric()
  ) 
```

### Confirm

::: columns

::: {.column width="50%"}

```{r}
df_clean |> 
  select(end_emo_clean) |> 
  glimpse()
```

<br>


::: {.fragment}
```{r, error=TRUE}
mean(df_clean[["end_emo_clean"]], na.rm = TRUE)
```
:::

:::

::: {.column width="50%" .fragment}

```{r}
df_clean |> 
  count(end_emo_clean, end_emo)
```

:::

:::



:::
