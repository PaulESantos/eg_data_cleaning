{
  "hash": "07126177c53f0deb1d808a188e590ec4",
  "result": {
    "markdown": "---\ntitle: \"Data Cleaning\"\nauthor: \"Crystal Lewis, Shannon Pileggi, & Peter Higgins\"\nfooter: \"[Data Cleaning](https://shannonpileggi.github.io/rmedicine-data-cleaning-2023)\"\nlogo: \"images/R-Med-logo-revised-pride.png\"\neditor: source\nformat: \n  revealjs: \n    theme: slides.scss\n    transition: fade\n    slide-number: true\n    chalkboard: true\nexecute:\n  echo: true\n  freeze: auto\ncache: true\n---\n# Introduction\n\n::: {.cell}\n\n:::\n\n## Licensing\n\n<br>\n\nThis work is licensed under [Creative Commons Zero v1.0 Universal](https://creativecommons.org/publicdomain/zero/1.0/).\n\n\n## Instructors\n\n::: columns\n::: {.column width=\"33%\"}\n**Crystal Lewis**\n\n![](images/Crystal_circle.png){width=\"70%\"}\n\n:::\n::: {.column width=\"33%\"}\n**Shannon Pileggi**\n\n![](images/Shannon_circle.png){width=\"70%\"}\n:::\n\n::: {.column width=\"33%\"}\n**Peter Higgins**\n\n![](images/Peter_circle.jpg){width=\"70%\"}\n\n\n\n:::\n:::\n\n## Scope\n\n![Taming the Data Beast, by Allison Horst](images/data_beast_allison_horst.jpeg)\n\nTaming the Data Beast, from Allison Horst's [Data Science Illustrations](https://allisonhorst.com/data-science-art)\n\n## Schedule\n\n| Time          | Activity           |\n|---------------|--------------------|\n| 11:00 - 11:50 | Crystal Lewis (Data management best practices)          |\n| 11:50 - 12:00 | *Break*            |\n| 12:00 - 12:50 | Shannon Pileggi (Data cleaning fundamentals)          |\n| 12:50 - 12:00 | *Break*            |\n| 01:00 - 02:00 | Peter Higgins (Data wrangling & reshaping)          |\n\n<br>\n\nPlease add any questions to the public Zoom chat. These may be answered in the \nmoment or addressed at the end depending on context.\n\n\n# Syntax aside\n\n## Pipes\n\n-   2014+ magrittr pipe `%>%`\n\n-   2021+ (R $\\geq$ 4.1.0) native R pipe `|>`\n\n2022 Isabella Velásquez Understanding the native R pipe \\|\\> <https://ivelasq.rbind.io/blog/understanding-the-r-pipe/>\n\n. . .\n\n<brshort>\n\n::: columns\n::: {.column width=\"50%\"}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-2_a118722ddfe3d2b8388695b719052073'}\n\n```{.r .cell-code}\nwhatever(arg1, arg2, arg3, ...)\n\narg1 |>  \n  whatever(arg2, arg3)\n```\n:::\n\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"45%\"}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-3_43c4b95e43ccbe6c13ab98bc0338abae'}\n\n```{.r .cell-code}\nmean(0:10)\n\n0:10 |> \n  mean()\n```\n:::\n\n:::\n:::\n\n\n::: footer\nChange `CTRL + Shift + M` shortcut to native pipe:\n\n`Tools -> Global Options -> Code -> `\n   \n&nbsp;&nbsp; `Editing -> check Use Native Pipe Operator`\n\n:::\n\n## R for Data Science: Ch 18 Pipes\n\n![](images/foo-foo.png)\n\n::: footer\n<https://r4ds.had.co.nz/pipes.html#pipes>\n:::\n\n## Namespacing\n\n`dplyr::select()`\n\n-   tells R explicitly to use the function `select` from the package `dplyr`\n\n-   can help to avoid name conflicts (e.g., `MASS::select()`)\n\n-   does not require `library(dplyr)`\n\n. . .\n\n::: columns\n::: {.column width=\"45%\"}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-4_f17d1176be26064341febfc458f4cd7b'}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nselect(mtcars, mpg, cyl) \n\nmtcars |>  \n  select(mpg, cyl) \n```\n:::\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"50%\"}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-5_f509baf7d1120bc64763172bdfa08dd6'}\n\n```{.r .cell-code}\n# library(dplyr) not needed\n\ndplyr::select(mtcars, mpg, cyl) \n\nmtcars |>  \n  dplyr::select(mpg, cyl) \n```\n:::\n:::\n:::\n\n# Crystal Section A\n\n## Slide 1\n\n## Slide 2\n\n# Crystal Section B\n\n## Slide 1\n\n## Slide 2\n\n# Stage 1 cleaning\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-6_4ec7ef770c365b8a2ae4375f53377ef9'}\n\n:::\n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-7_831e13e899c0604e6a28d5cd3eeeaae8'}\n\n:::\n\n\n\n## Variable names\n\nOriginal variable names in excel: \n\n![](images/var_names_1.PNG)\n\n. . .\n\n<br>\n\nVariable names import as shown, with modifications from `readxl::read_excel()` to ensure uniqueness:\n\n![](images/var_names_2.PNG)\n\n\n\n## Variable names, cleaner\n\nVariable names as imported:\n\n![](images/var_names_2.PNG)\n\n. . .\n\n<br>\n\n`janitor::clean_names()` removes special characters and implements snake case by default:\n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-8_b427be64641fd6305528125cc56738f8'}\n\n```{.r .cell-code}\ndf_clean <- df_raw |> \n  janitor::clean_names() \n```\n:::\n\n![](images/var_names_3.PNG)\n\n## Remove empty columns or rows\n\n\n::: panel-tabset\n\n### Problem\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-9_fe2322909bf343881c8eb7d3f022e776'}\n\n```{.r .cell-code}\ndf_clean |> \n  select(pat_id, race:start_bp) |> \n  slice(13:18)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  pat_id race             dob                 x7    start_bp\n  <chr>  <chr>            <dttm>              <lgl> <chr>   \n1 013    Caucasian        1948-02-27 00:00:00 NA    118/73  \n2 014    African-American 1966-04-22 00:00:00 NA    106/59  \n3 015    H/API            1978-08-11 00:00:00 NA    112/69  \n4 <NA>   <NA>             NA                  NA    <NA>    \n5 016    African-American 1998-10-28 00:00:00 NA    114/76  \n6 017    Caucasian        2001-01-09 00:00:00 NA    124/80  \n```\n:::\n:::\n\n### Solution\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-10_d3ddd2fc995dfbbee338d1b956f703d7'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ndf_clean <- df_raw |> \n  janitor::clean_names() |> \n  janitor::remove_empty(which = c(\"rows\", \"cols\"))\n```\n:::\n\n<br>\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-11_dc0c487c1bdab34b8b4714f21eb85581'}\n\n```{.r .cell-code}\ndf_clean |> \n  select(pat_id, race:start_bp) |> \n  slice(13:18)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  pat_id race             dob                 start_bp\n  <chr>  <chr>            <dttm>              <chr>   \n1 013    Caucasian        1948-02-27 00:00:00 118/73  \n2 014    African-American 1966-04-22 00:00:00 106/59  \n3 015    H/API            1978-08-11 00:00:00 112/69  \n4 016    African-American 1998-10-28 00:00:00 114/76  \n5 017    Caucasian        2001-01-09 00:00:00 124/80  \n6 018    Caucasian        1994-03-07 00:00:00 120/68  \n```\n:::\n:::\n\n### Confirm\n\n::: columns\n::: {.column width=\"35%\"}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-12_d2b938f9385454db0777b19b8263bea6'}\n\n```{.r .cell-code}\n#\ndf_raw |>\n  janitor::clean_names() |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 31\nColumns: 38\n$ pat_id                           <chr> \"001\", \"002\", \"003\", \"004\", \"005\", \"0…\n$ treatment                        <chr> \"upa\", \"uste\", \"oza\", \"upa\", \"oza\", \"…\n$ start_date                       <dbl> 44208, 44215, 44230, 44245, 44255, 44…\n$ ethnic                           <chr> \"hispanic\", \"not hispanic\", \"not hisp…\n$ race                             <chr> \"Caucasian\", \"Caucasian\", \"African-Am…\n$ dob                              <dttm> 2005-01-07, 1937-04-13, 1946-06-06, …\n$ x7                               <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ start_bp                         <chr> \"114/72\", \"132/86\", \"124/92\", \"144/83…\n$ pre_post_wt_kg                   <chr> \"84/82\", \"77/77\", \"74/75\", \"66/65\", \"…\n$ start_mes                        <dbl> 3, 2, 1, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3…\n$ start_bss                        <dbl> 75.45589, 53.62239, 25.52527, 79.3659…\n$ start_abd_score                  <dbl> 80.59025, 53.64479, 26.15548, 77.9491…\n$ start_sys                        <dbl> 81.45415, 52.60911, 27.55523, 79.8218…\n$ start_coping                     <dbl> 50.41090, 29.56833, 15.20377, 51.2653…\n$ start_emo                        <dbl> 73.32378, 55.72461, 36.56135, 80.7601…\n$ daily_life_impact_score_at_start <dbl> 86.88945, 56.10371, 31.38942, 84.8523…\n$ start_wbc                        <dbl> 8.2, 10.1, 5.5, 4.7, 8.9, 9.3, 5.6, 9…\n$ start_plt                        <chr> \"273K/microL\", \"414K/microL\", \"323K/m…\n$ start_na                         <chr> \"137mmol/L\", \"142mmol/L\", \"140mmol/L\"…\n$ start_k                          <chr> \"3.7\", \"4.0999999999999996\", \"4.3\", \"…\n$ end_month                        <dbl> 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9…\n$ end_day                          <dbl> 14, 21, 6, 22, 30, 4, 10, 15, 22, 26,…\n$ end_year                         <dbl> 2021, 2021, 2021, 2021, 2021, 2021, 2…\n$ end_mes                          <dbl> 0, 1, 1, 1, 2, 1, 2, 2, 0, 1, 0, 1, 1…\n$ end_bss                          <dbl> 9.455894, 31.622388, 25.525267, 35.36…\n$ end_abd                          <dbl> 20.590252, 33.644791, 26.155480, 37.9…\n$ end_sys                          <dbl> 9.454153, 28.609114, 27.555232, 31.82…\n$ end_coping                       <dbl> 23.41090, 20.56833, 15.20377, 33.2653…\n$ end_emo                          <chr> \"31.980531232702354\", \"43.15496159247…\n$ end_dl                           <chr> \"6.6605585857717573\", \"30.53917899804…\n$ end_wbc                          <dbl> 8.562208, 11.135466, 3.000000, 5.6919…\n$ end_plt                          <dbl> 201, 340, 256, 327, 432, 348, 181, 12…\n$ end_na                           <dbl> 137.3278, 142.2140, 140.0831, 139.158…\n$ end_k                            <dbl> 3.741212, 4.148464, 4.471147, 3.64134…\n$ fake_street                      <chr> \"990 Mohammad Mountain\", \"8512 O'Conn…\n$ fake_city                        <chr> \"North Sigmundville\", \"Port Halstad\",…\n$ fake_state                       <chr> \"New Mexico\", \"Missouri\", \"South Caro…\n$ fake_zip                         <dbl> 96074, 11264, 57246, 31457, 30711, 52…\n```\n:::\n:::\n:::\n\n::: {.column width=\"65%\"}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-13_575b1adee193a27eefeb667686ac5745'}\n\n```{.r .cell-code}\ndf_raw |> \n  janitor::clean_names() |> \n  janitor::remove_empty(which = c(\"rows\", \"cols\")) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 30\nColumns: 37\n$ pat_id                           <chr> \"001\", \"002\", \"003\", \"004\", \"005\", \"0…\n$ treatment                        <chr> \"upa\", \"uste\", \"oza\", \"upa\", \"oza\", \"…\n$ start_date                       <dbl> 44208, 44215, 44230, 44245, 44255, 44…\n$ ethnic                           <chr> \"hispanic\", \"not hispanic\", \"not hisp…\n$ race                             <chr> \"Caucasian\", \"Caucasian\", \"African-Am…\n$ dob                              <dttm> 2005-01-07, 1937-04-13, 1946-06-06, …\n$ start_bp                         <chr> \"114/72\", \"132/86\", \"124/92\", \"144/83…\n$ pre_post_wt_kg                   <chr> \"84/82\", \"77/77\", \"74/75\", \"66/65\", \"…\n$ start_mes                        <dbl> 3, 2, 1, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3…\n$ start_bss                        <dbl> 75.45589, 53.62239, 25.52527, 79.3659…\n$ start_abd_score                  <dbl> 80.59025, 53.64479, 26.15548, 77.9491…\n$ start_sys                        <dbl> 81.45415, 52.60911, 27.55523, 79.8218…\n$ start_coping                     <dbl> 50.41090, 29.56833, 15.20377, 51.2653…\n$ start_emo                        <dbl> 73.32378, 55.72461, 36.56135, 80.7601…\n$ daily_life_impact_score_at_start <dbl> 86.88945, 56.10371, 31.38942, 84.8523…\n$ start_wbc                        <dbl> 8.2, 10.1, 5.5, 4.7, 8.9, 9.3, 5.6, 9…\n$ start_plt                        <chr> \"273K/microL\", \"414K/microL\", \"323K/m…\n$ start_na                         <chr> \"137mmol/L\", \"142mmol/L\", \"140mmol/L\"…\n$ start_k                          <chr> \"3.7\", \"4.0999999999999996\", \"4.3\", \"…\n$ end_month                        <dbl> 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9…\n$ end_day                          <dbl> 14, 21, 6, 22, 30, 4, 10, 15, 22, 26,…\n$ end_year                         <dbl> 2021, 2021, 2021, 2021, 2021, 2021, 2…\n$ end_mes                          <dbl> 0, 1, 1, 1, 2, 1, 2, 2, 0, 1, 0, 1, 1…\n$ end_bss                          <dbl> 9.455894, 31.622388, 25.525267, 35.36…\n$ end_abd                          <dbl> 20.590252, 33.644791, 26.155480, 37.9…\n$ end_sys                          <dbl> 9.454153, 28.609114, 27.555232, 31.82…\n$ end_coping                       <dbl> 23.41090, 20.56833, 15.20377, 33.2653…\n$ end_emo                          <chr> \"31.980531232702354\", \"43.15496159247…\n$ end_dl                           <chr> \"6.6605585857717573\", \"30.53917899804…\n$ end_wbc                          <dbl> 8.562208, 11.135466, 3.000000, 5.6919…\n$ end_plt                          <dbl> 201, 340, 256, 327, 432, 348, 181, 12…\n$ end_na                           <dbl> 137.3278, 142.2140, 140.0831, 139.158…\n$ end_k                            <dbl> 3.741212, 4.148464, 4.471147, 3.64134…\n$ fake_street                      <chr> \"990 Mohammad Mountain\", \"8512 O'Conn…\n$ fake_city                        <chr> \"North Sigmundville\", \"Port Halstad\",…\n$ fake_state                       <chr> \"New Mexico\", \"Missouri\", \"South Caro…\n$ fake_zip                         <dbl> 96074, 11264, 57246, 31457, 30711, 52…\n```\n:::\n:::\n:::\n\n:::\n\n:::\n\n\n## Recoding\n\n::: panel-tabset\n\n### Problem\n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-14_f4b324c9d1f0b8bc1133a9ffcf48d122'}\n\n```{.r .cell-code}\ndf_clean |> \n  count(ethnic)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  ethnic           n\n  <chr>        <int>\n1 Hispanic         1\n2 NOT hispanic     1\n3 hispamnic        1\n4 hispanic         3\n5 not hispanic    24\n```\n:::\n:::\n\n\n### Solution\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-15_8dd407231f4d7fae7530e5d7a1716c9f'}\n\n```{.r .cell-code  code-line-numbers=\"4-9\"}\ndf_clean <- df_raw |>\n  janitor::clean_names() |> \n  janitor::remove_empty(which = c(\"rows\", \"cols\")) |> \n  mutate(\n    ethnic_clean = case_when(\n      ethnic %in%  c(\"hispanic\", \"Hispanic\", \"hispamnic\") ~ \"hispanic\",\n      ethnic %in%  c(\"NOT hispanic\", \"not hispanic\") ~ \"not hispanic\",\n    )\n  )\n\ndf_clean |> \n  count(ethnic_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  ethnic_clean     n\n  <chr>        <int>\n1 hispanic         5\n2 not hispanic    25\n```\n:::\n:::\n\n\n### Confirm\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-16_5bc470a2bfe38de6b0b54204fb5670f2'}\n\n```{.r .cell-code}\ndf_clean |> \n  count(ethnic_clean, ethnic)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  ethnic_clean ethnic           n\n  <chr>        <chr>        <int>\n1 hispanic     Hispanic         1\n2 hispanic     hispamnic        1\n3 hispanic     hispanic         3\n4 not hispanic NOT hispanic     1\n5 not hispanic not hispanic    24\n```\n:::\n:::\n\n:::\n\n## Exercise\n\n\n<br>\n\nComplete Data Cleaning Fundamentals Exercise SP1.\n\n<br>\n\n[--> Take me to the exercises <--](https://shannonpileggi.github.io/rmedicine-data-cleaning-2023/exercises.html){target=\"_blank\"}\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_9838576d\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:4em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## Replace values with missing\n\n\n\n::: panel-tabset\n\n### Problem\n\n::: columns\n\n::: {.column width=\"50%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-18_40b9ed9a8eb8904e6f572250c48f1624'}\n\n```{.r .cell-code}\ndf_clean |> \n  count(end_na) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 2\n   end_na     n\n    <dbl> <int>\n 1   -99      1\n 2   133.     1\n 3   135.     1\n 4   135.     1\n 5   136.     1\n 6   137.     1\n 7   137.     1\n 8   138.     1\n 9   138.     1\n10   138.     1\n# ℹ 20 more rows\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-19_52bc3e59c97f17e31ea6e555258b43b1'}\n\n```{.r .cell-code}\ndf_clean |> \n  ggplot(aes(x = end_na)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n:::\n\n:::\n\n### Solution\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-20_ae648cac99bc0d466c2c9caf48ff9382'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\ndf_clean <- df_raw |>\n  janitor::clean_names() |> \n  janitor::remove_empty(which = c(\"rows\", \"cols\")) |> \n  mutate(\n    ethnic_clean = case_when(\n      ethnic %in%  c(\"hispanic\", \"Hispanic\", \"hispamnic\") ~ \"hispanic\",\n      ethnic %in%  c(\"NOT hispanic\", \"not hispanic\") ~ \"not hispanic\",\n    ),\n    end_na_clean = na_if(end_na, -99)\n  ) \n```\n:::\n\n\n### Confirm\n\n::: columns\n\n::: {.column width=\"50%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-21_bbff8a5a2488910680498f4552d8c9fd'}\n\n```{.r .cell-code}\ndf_clean |> \n  count(end_na, end_na_clean) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 3\n   end_na end_na_clean     n\n    <dbl>        <dbl> <int>\n 1   -99           NA      1\n 2   133.         133.     1\n 3   135.         135.     1\n 4   135.         135.     1\n 5   136.         136.     1\n 6   137.         137.     1\n 7   137.         137.     1\n 8   138.         138.     1\n 9   138.         138.     1\n10   138.         138.     1\n# ℹ 20 more rows\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-22_70916378208773539ebe81fd01a335a6'}\n\n```{.r .cell-code}\ndf_clean |> \n  ggplot(aes(x = end_na_clean)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n:::\n\n:::\n\n:::\n\n\n## Incorrect variable type\n\n\n::: panel-tabset\n\n### Problem\n\n\n::: columns\n\n::: {.column width=\"50%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-23_465e9bea370d35d0dfa0e999b9611682'}\n\n```{.r .cell-code}\ndf_raw |> \n  select(end_emo) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 31\nColumns: 1\n$ end_emo <chr> \"31.980531232702354\", \"43.154961592472482\", \"36.88112394645107…\n```\n:::\n:::\n\n<br>\n\n\n::: {.fragment}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-24_84a3415e0b0bfccb4175a8f08461a5f7'}\n\n```{.r .cell-code}\nmean(df_raw[[\"end_emo\"]], na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in mean.default(df_raw[[\"end_emo\"]], na.rm = TRUE): argument is not\nnumeric or logical: returning NA\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\" .fragment}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-25_4d6a3f525c90d890c99d986c53fff84f'}\n\n```{.r .cell-code}\ndf_raw[[\"end_emo\"]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"31.980531232702354\" \"43.154961592472482\" \"36.881123946451076\"\n [4] \"58.670309483569042\" \"58.863864661125419\" \"34.593046073414015\"\n [7] \"63.285059520403976\" \"65.313599031979081\" \"27.976656095216335\"\n[10] \"46.802992507671597\" \"33.122563864954309\" \"49.240520034972612\"\n[13] \"47.050604139781761\" \"54.487640962873577\" \"not done\"          \n[16] NA                   \"49.084529664712441\" \"27.370965295845295\"\n[19] \"60.432712720552317\" \"26.162987564588903\" \"48.329539382030802\"\n[22] \"40.735196376550661\" \"27.000188739872502\" \"57.019771433515629\"\n[25] \"39.783229029414606\" \"52.110256961065794\" \"37.098188331548307\"\n[28] \"39.264033750725694\" \"70.34798440037369\"  \"29.839211956263874\"\n[31] \"42.853436653960713\"\n```\n:::\n:::\n\n:::\n\n:::\n\n\n### Solution\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-26_2d834677e42bf028e9bced1a6d8961bc'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\ndf_clean <- df_raw |>\n  janitor::clean_names() |> \n  janitor::remove_empty(which = c(\"rows\", \"cols\")) |> \n  mutate(\n    ethnic_clean = case_when(\n      ethnic %in%  c(\"hispanic\", \"Hispanic\", \"hispamnic\") ~ \"hispanic\",\n      ethnic %in%  c(\"NOT hispanic\", \"not hispanic\") ~ \"not hispanic\",\n    ),\n    end_na_clean = na_if(end_na, -99),\n    end_emo_clean = na_if(end_emo, \"not done\") |> as.numeric()\n  ) \n```\n:::\n\n### Confirm\n\n::: columns\n\n::: {.column width=\"50%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-27_ff875a6aac7f9608a1f343a130015e9a'}\n\n```{.r .cell-code}\ndf_clean |> \n  select(end_emo_clean) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 30\nColumns: 1\n$ end_emo_clean <dbl> 31.98053, 43.15496, 36.88112, 58.67031, 58.86386, 34.593…\n```\n:::\n:::\n\n<br>\n\n\n::: {.fragment}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-28_4725d2f44601d9e6ca8aa3e578c6773b'}\n\n```{.r .cell-code}\nmean(df_clean[[\"end_emo_clean\"]], na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 44.78813\n```\n:::\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\" .fragment}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-29_8717b80a4a16a9f801faa54ffe9401bc'}\n\n```{.r .cell-code}\ndf_clean |> \n  count(end_emo_clean, end_emo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 3\n   end_emo_clean end_emo                n\n           <dbl> <chr>              <int>\n 1          26.2 26.162987564588903     1\n 2          27.0 27.000188739872502     1\n 3          27.4 27.370965295845295     1\n 4          28.0 27.976656095216335     1\n 5          29.8 29.839211956263874     1\n 6          32.0 31.980531232702354     1\n 7          33.1 33.122563864954309     1\n 8          34.6 34.593046073414015     1\n 9          36.9 36.881123946451076     1\n10          37.1 37.098188331548307     1\n# ℹ 20 more rows\n```\n:::\n:::\n\n:::\n\n:::\n\n:::\n\n\n## Correcting dates\n\n::: panel-tabset\n\n### Problem\n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-30_dfdfd9c40d569b785b5b3a201831f5a5'}\n\n```{.r .cell-code}\ndf_raw |> \n  select(start_date) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 31\nColumns: 1\n$ start_date <dbl> 44208, 44215, 44230, 44245, 44255, 44259, 44264, 44999, 442…\n```\n:::\n:::\n\n\n<br>\n\n::: {.fragment}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-31_b18ec93d165bd4b0436e6593ffef9dfb'}\n\n```{.r .cell-code}\ndf_raw[[\"start_date\"]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 44208 44215 44230 44245 44255 44259 44264 44999 44276 44278 44297 44308\n[13] 44313 44318 44324    NA 44329 44332 44346 44358 44370 44383 44391 44397\n[25] 44412 44425 44434 44444 44461 44475 44500\n```\n:::\n:::\n\n:::\n\n### Solution\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-32_d8e36ee849d33b82620e3d61cbdbd8f2'}\n\n```{.r .cell-code  code-line-numbers=\"11\"}\ndf_clean <- df_raw |>\n  janitor::clean_names() |> \n  janitor::remove_empty(which = c(\"rows\", \"cols\")) |> \n  mutate(\n    ethnic_clean = case_when(\n      ethnic %in%  c(\"hispanic\", \"Hispanic\", \"hispamnic\") ~ \"hispanic\",\n      ethnic %in%  c(\"NOT hispanic\", \"not hispanic\") ~ \"not hispanic\",\n    ),\n    end_na_clean = na_if(end_na, -99),\n    end_emo_clean = na_if(end_emo, \"not done\") |> as.numeric(),\n    start_date_clean = janitor::convert_to_date(start_date)\n  ) \n```\n:::\n\n### Confirm\n\n::: columns\n\n::: {.column width=\"50%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-33_609f0507cfa0dbe580fe1fa2b586a013'}\n\n```{.r .cell-code}\ndf_clean |> \n  select(start_date, start_date_clean) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 30\nColumns: 2\n$ start_date       <dbl> 44208, 44215, 44230, 44245, 44255, 44259, 44264, 4499…\n$ start_date_clean <date> 2021-01-12, 2021-01-19, 2021-02-03, 2021-02-18, 2021…\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-34_ee652d0d37bb405148a19058517af1bc'}\n\n```{.r .cell-code}\ndf_clean |> \n  count(start_date, start_date_clean) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 3\n   start_date start_date_clean     n\n        <dbl> <date>           <int>\n 1      44208 2021-01-12           1\n 2      44215 2021-01-19           1\n 3      44230 2021-02-03           1\n 4      44245 2021-02-18           1\n 5      44255 2021-02-28           1\n 6      44259 2021-03-04           1\n 7      44264 2021-03-09           1\n 8      44276 2021-03-21           1\n 9      44278 2021-03-23           1\n10      44297 2021-04-11           1\n# ℹ 20 more rows\n```\n:::\n:::\n\n:::\n\n:::\n\n:::\n\n## Extracting numbers from text\n\n::: panel-tabset\n\n### Problem\n\n\n::: columns\n\n::: {.column width=\"50%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-35_d8065e3af5e9fd17e3026e4dbb1f6bf6'}\n\n```{.r .cell-code}\ndf_raw |> \n  select(start_na) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 31\nColumns: 1\n$ start_na <chr> \"137mmol/L\", \"142mmol/L\", \"140mmol/L\", \"139mmol/L\", \"144mmol/…\n```\n:::\n:::\n\n<br>\n\n\n::: {.fragment}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-36_63e4336ae51a757946c4bdf4842d1e69'}\n\n```{.r .cell-code}\nmean(df_raw[[\"start_na\"]], na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in mean.default(df_raw[[\"start_na\"]], na.rm = TRUE): argument is not\nnumeric or logical: returning NA\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\" .fragment}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-37_e42fd096ccb2d34392d6614eab77dca7'}\n\n```{.r .cell-code}\ndf_raw[[\"start_na\"]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"137mmol/L\" \"142mmol/L\" \"140mmol/L\" \"139mmol/L\" \"144mmol/L\" \"145mmol/L\"\n [7] \"142mmol/L\" \"138mmol/L\" \"140mmol/L\" \"137mmol/L\" \"143mmol/L\" \"136mmol/L\"\n[13] \"135mmol/L\" \"141mmol/L\" \"133mmol/L\" NA          \"135mmol/L\" \"143mmol/L\"\n[19] \"136mmol/L\" \"144mmol/L\" \"145mmol/L\" \"140mmol/L\" \"141mmol/L\" \"142mmol/L\"\n[25] \"138mmol/L\" \"139mmol/L\" \"142mmol/L\" \"144mmol/L\" \"139mmol/L\" \"138mmol/L\"\n[31] \"140mmol/L\"\n```\n:::\n:::\n\n:::\n\n:::\n\n### Solution\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-38_b87ee30d39d678a515c234156bbcb9f1'}\n\n```{.r .cell-code  code-line-numbers=\"11\"}\ndf_clean <- df_raw |>\n  janitor::clean_names() |> \n  janitor::remove_empty(which = c(\"rows\", \"cols\")) |> \n  mutate(\n    ethnic_clean = case_when(\n      ethnic %in%  c(\"hispanic\", \"Hispanic\", \"hispamnic\") ~ \"hispanic\",\n      ethnic %in%  c(\"NOT hispanic\", \"not hispanic\") ~ \"not hispanic\",\n    ),\n    end_na_clean = na_if(end_na, -99),\n    end_emo_clean = na_if(end_emo, \"not done\") |> as.numeric(),\n    start_na_clean = parse_number(start_na)\n  ) \n```\n:::\n\n### Confirm\n\n::: columns\n\n::: {.column width=\"50%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-39_f15a50a3dcc479f2627dcf90f351a48a'}\n\n```{.r .cell-code}\ndf_clean |> \n  select(start_na_clean) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 30\nColumns: 1\n$ start_na_clean <dbl> 137, 142, 140, 139, 144, 145, 142, 138, 140, 137, 143, …\n```\n:::\n:::\n\n<br>\n\n\n::: {.fragment}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-40_577d470e398915679a5e10aa0aa35f14'}\n\n```{.r .cell-code}\nmean(df_clean[[\"start_na_clean\"]], na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 139.9333\n```\n:::\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\" .fragment}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-41_662b99cde61654f025a434265ed0e341'}\n\n```{.r .cell-code}\ndf_clean |> \n  count(start_na_clean, start_na)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 3\n   start_na_clean start_na      n\n            <dbl> <chr>     <int>\n 1            133 133mmol/L     1\n 2            135 135mmol/L     2\n 3            136 136mmol/L     2\n 4            137 137mmol/L     2\n 5            138 138mmol/L     3\n 6            139 139mmol/L     3\n 7            140 140mmol/L     4\n 8            141 141mmol/L     2\n 9            142 142mmol/L     4\n10            143 143mmol/L     2\n11            144 144mmol/L     3\n12            145 145mmol/L     2\n```\n:::\n:::\n\n:::\n\n:::\n\n:::\n\n\n## Exercise\n\n\n<br>\n\nComplete Data Cleaning Fundamentals Exercise SP2.\n\n<br>\n\n[--> Take me to the exercises <--](https://shannonpileggi.github.io/rmedicine-data-cleaning-2023/exercises.html){target=\"_blank\"}\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_30285aa6\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:4em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n\n## Character variable should be a factor\n\n\n::: panel-tabset\n\n### Problem\n\n\n::: columns\n\n::: {.column width=\"35%\"}\n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-43_f124845c2dbba6efe69bb685cc44ec32'}\n\n```{.r .cell-code}\ndf_clean |> \n  count(treatment)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  treatment     n\n  <chr>     <int>\n1 oza          10\n2 upa          10\n3 uste         10\n```\n:::\n:::\n\n<br>\n\n::: {.fragment}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-44_5edf5f5f1d2c3d01ec5bc7ba419a84ef'}\n\n```{.r .cell-code}\ndf_clean |> \n  count(ethnic_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  ethnic_clean     n\n  <chr>        <int>\n1 hispanic         5\n2 not hispanic    25\n```\n:::\n:::\n:::\n\n\n:::\n\n\n\n::: {.column width=\"65%\" .fragment}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-45_74faee3bbcdabeaf19129a4467d539fa'}\n\n```{.r .cell-code}\ndf_clean |> \n  select(treatment, ethnic_clean) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 30\nColumns: 2\n$ treatment    <chr> \"upa\", \"uste\", \"oza\", \"upa\", \"oza\", \"uste\", \"uste\", \"oza\"…\n$ ethnic_clean <chr> \"hispanic\", \"not hispanic\", \"not hispanic\", \"not hispanic…\n```\n:::\n:::\n\n\n::: {.fragment}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-46_91b0cc1965a2b830fa3aee80d20b421a'}\n\n```{.r .cell-code}\ndf_clean |> \n  select(treatment, ethnic_clean) |> \n  tbl_summary(by = treatment)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"yykcbpacnd\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#yykcbpacnd table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#yykcbpacnd thead, #yykcbpacnd tbody, #yykcbpacnd tfoot, #yykcbpacnd tr, #yykcbpacnd td, #yykcbpacnd th {\n  border-style: none;\n}\n\n#yykcbpacnd p {\n  margin: 0;\n  padding: 0;\n}\n\n#yykcbpacnd .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#yykcbpacnd .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#yykcbpacnd .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#yykcbpacnd .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#yykcbpacnd .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yykcbpacnd .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yykcbpacnd .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yykcbpacnd .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#yykcbpacnd .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#yykcbpacnd .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#yykcbpacnd .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#yykcbpacnd .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#yykcbpacnd .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#yykcbpacnd .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#yykcbpacnd .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#yykcbpacnd .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#yykcbpacnd .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#yykcbpacnd .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#yykcbpacnd .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yykcbpacnd .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#yykcbpacnd .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#yykcbpacnd .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#yykcbpacnd .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yykcbpacnd .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#yykcbpacnd .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#yykcbpacnd .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yykcbpacnd .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yykcbpacnd .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#yykcbpacnd .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yykcbpacnd .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#yykcbpacnd .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yykcbpacnd .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yykcbpacnd .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yykcbpacnd .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yykcbpacnd .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yykcbpacnd .gt_left {\n  text-align: left;\n}\n\n#yykcbpacnd .gt_center {\n  text-align: center;\n}\n\n#yykcbpacnd .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#yykcbpacnd .gt_font_normal {\n  font-weight: normal;\n}\n\n#yykcbpacnd .gt_font_bold {\n  font-weight: bold;\n}\n\n#yykcbpacnd .gt_font_italic {\n  font-style: italic;\n}\n\n#yykcbpacnd .gt_super {\n  font-size: 65%;\n}\n\n#yykcbpacnd .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#yykcbpacnd .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#yykcbpacnd .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#yykcbpacnd .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#yykcbpacnd .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#yykcbpacnd .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#yykcbpacnd .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;oza&lt;/strong&gt;, N = 10&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>oza</strong>, N = 10<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;upa&lt;/strong&gt;, N = 10&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>upa</strong>, N = 10<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;uste&lt;/strong&gt;, N = 10&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>uste</strong>, N = 10<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">ethnic_clean</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    hispanic</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">4 (40%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">1 (10%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    not hispanic</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">6 (60%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">9 (90%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">10 (100%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n:::\n\n:::\n\n:::\n\n\n### Solution\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-47_35a1c048f673aa5226829327faf20128'}\n\n```{.r .cell-code  code-line-numbers=\"8,12\"}\ndf_clean <- df_raw |>\n  janitor::clean_names() |> \n  janitor::remove_empty(which = c(\"rows\", \"cols\")) |> \n  mutate(\n    ethnic_clean = case_when(\n      ethnic %in%  c(\"hispanic\", \"Hispanic\", \"hispamnic\") ~ \"hispanic\",\n      ethnic %in%  c(\"NOT hispanic\", \"not hispanic\") ~ \"not hispanic\",\n    ) |> fct_infreq(),\n    end_na_clean = na_if(end_na, -99),\n    end_emo_clean = na_if(end_emo, \"not done\") |> as.numeric(),\n    start_na_clean = parse_number(start_na),\n    treatment = fct_relevel(treatment, \"upa\", \"uste\", \"oza\")\n  ) \n```\n:::\n\n<br>\n\nSee the [forcats package](https://forcats.tidyverse.org/) for other factor handling solutions.\n\n### Confirm\n\n::: columns\n\n::: {.column width=\"35%\"}\n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-48_a8ed8afc30898bb02e301fb9632ac4be'}\n\n```{.r .cell-code}\ndf_clean |> \n  count(treatment)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  treatment     n\n  <fct>     <int>\n1 upa          10\n2 uste         10\n3 oza          10\n```\n:::\n:::\n\n<br>\n\n::: {.fragment}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-49_15821c03de446d546b5f410636356306'}\n\n```{.r .cell-code}\ndf_clean |> \n  count(ethnic_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  ethnic_clean     n\n  <fct>        <int>\n1 not hispanic    25\n2 hispanic         5\n```\n:::\n:::\n:::\n\n\n:::\n\n\n\n::: {.column width=\"65%\" .fragment}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-50_acc6d5e96be33d2cb639a3cbc0a730f9'}\n\n```{.r .cell-code}\ndf_clean |> \n  select(treatment, ethnic_clean) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 30\nColumns: 2\n$ treatment    <fct> upa, uste, oza, upa, oza, uste, uste, oza, upa, oza, upa,…\n$ ethnic_clean <fct> hispanic, not hispanic, not hispanic, not hispanic, not h…\n```\n:::\n:::\n\n\n::: {.fragment}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-51_6796ab922cb840cbb60fb4b69f771b4d'}\n\n```{.r .cell-code}\ndf_clean |> \n  select(treatment, ethnic_clean) |> \n  tbl_summary(by = treatment)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"hgowbrklrl\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#hgowbrklrl table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#hgowbrklrl thead, #hgowbrklrl tbody, #hgowbrklrl tfoot, #hgowbrklrl tr, #hgowbrklrl td, #hgowbrklrl th {\n  border-style: none;\n}\n\n#hgowbrklrl p {\n  margin: 0;\n  padding: 0;\n}\n\n#hgowbrklrl .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#hgowbrklrl .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#hgowbrklrl .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#hgowbrklrl .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#hgowbrklrl .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#hgowbrklrl .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hgowbrklrl .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#hgowbrklrl .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#hgowbrklrl .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#hgowbrklrl .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#hgowbrklrl .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#hgowbrklrl .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#hgowbrklrl .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#hgowbrklrl .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#hgowbrklrl .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#hgowbrklrl .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#hgowbrklrl .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#hgowbrklrl .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#hgowbrklrl .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hgowbrklrl .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#hgowbrklrl .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#hgowbrklrl .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#hgowbrklrl .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hgowbrklrl .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#hgowbrklrl .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#hgowbrklrl .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hgowbrklrl .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hgowbrklrl .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#hgowbrklrl .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hgowbrklrl .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#hgowbrklrl .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hgowbrklrl .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#hgowbrklrl .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hgowbrklrl .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#hgowbrklrl .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hgowbrklrl .gt_left {\n  text-align: left;\n}\n\n#hgowbrklrl .gt_center {\n  text-align: center;\n}\n\n#hgowbrklrl .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#hgowbrklrl .gt_font_normal {\n  font-weight: normal;\n}\n\n#hgowbrklrl .gt_font_bold {\n  font-weight: bold;\n}\n\n#hgowbrklrl .gt_font_italic {\n  font-style: italic;\n}\n\n#hgowbrklrl .gt_super {\n  font-size: 65%;\n}\n\n#hgowbrklrl .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#hgowbrklrl .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#hgowbrklrl .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#hgowbrklrl .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#hgowbrklrl .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#hgowbrklrl .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#hgowbrklrl .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;upa&lt;/strong&gt;, N = 10&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>upa</strong>, N = 10<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;uste&lt;/strong&gt;, N = 10&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>uste</strong>, N = 10<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;oza&lt;/strong&gt;, N = 10&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>oza</strong>, N = 10<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">ethnic_clean</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    not hispanic</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">9 (90%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">10 (100%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">6 (60%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    hispanic</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1 (10%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">4 (40%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n:::\n\n:::\n\n:::\n\n:::\n\n## Exercise\n\n\n<br>\n\nComplete Data Cleaning Fundamentals Exercise SP3.\n\n<br>\n\n[--> Take me to the exercises <--](https://shannonpileggi.github.io/rmedicine-data-cleaning-2023/exercises.html){target=\"_blank\"}\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_6c5bdd7d\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:4em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## Separating values\n\n\n::: panel-tabset\n\n### Problem\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-53_06f2e3a675c145d29f3835edd7007f69'}\n\n```{.r .cell-code}\ndf_clean |> \n  select(start_bp) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 30\nColumns: 1\n$ start_bp <chr> \"114/72\", \"132/86\", \"124/92\", \"144/83\", \"122/78\", \"121/80\", \"…\n```\n:::\n:::\n\n<br>\n\n::: {.fragment}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-54_09365f966d09984d3f4da14351e018d5'}\n\n```{.r .cell-code}\nmean(df_clean[[\"start_bp\"]], na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n:::\n:::\n<br>\n\n\n::: {.fragment}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-55_f980e9fb7a22dc3bbfcd10b42dfc806e'}\n\n```{.r .cell-code}\ndf_clean[[\"start_bp\"]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"114/72\" \"132/86\" \"124/92\" \"144/83\" \"122/78\" \"121/80\" \"133/74\" \"116/73\"\n [9] \"118/66\" \"122/78\" \"126/82\" \"114/68\" \"118/73\" \"106/59\" \"112/69\" \"114/76\"\n[17] \"124/80\" \"120/68\" \"119/77\" \"116/74\" \"121/80\" \"112/58\" \"117/67\" \"118/73\"\n[25] \"116/74\" \"126/84\" \"144/96\" \"120/84\" \"115/75\" \"142/92\"\n```\n:::\n:::\n:::\n\n### Solution\n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-56_b61043831f38645427381c2a0c616af9'}\n\n```{.r .cell-code  code-line-numbers=\"14,15\"}\ndf_clean <- df_raw |>\n  janitor::clean_names() |> \n  janitor::remove_empty(which = c(\"rows\", \"cols\")) |> \n  mutate(\n    ethnic_clean = case_when(\n      ethnic %in%  c(\"hispanic\", \"Hispanic\", \"hispamnic\") ~ \"hispanic\",\n      ethnic %in%  c(\"NOT hispanic\", \"not hispanic\") ~ \"not hispanic\",\n    ) |> fct_infreq(),\n    end_na_clean = na_if(end_na, -99),\n    end_emo_clean = na_if(end_emo, \"not done\") |> as.numeric(),\n    start_na_clean = parse_number(start_na),\n    treatment = fct_relevel(treatment, \"upa\", \"uste\", \"oza\")\n    ) |>  \n  separate_wider_delim(start_bp, delim =\"/\", names = c(\"bp_systolic\", \"bp_diastolic\"), cols_remove = FALSE) |> \n  mutate(across(c(bp_systolic, bp_diastolic), as.numeric)) \n```\n:::\n\n### Confirm\n\n::: columns\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-57_3d34d4442d1b6ec37662771ec10d586d'}\n\n```{.r .cell-code}\ndf_clean |> \n  select(start_bp, bp_systolic, bp_diastolic) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 30\nColumns: 3\n$ start_bp     <chr> \"114/72\", \"132/86\", \"124/92\", \"144/83\", \"122/78\", \"121/80…\n$ bp_systolic  <dbl> 114, 132, 124, 144, 122, 121, 133, 116, 118, 122, 126, 11…\n$ bp_diastolic <dbl> 72, 86, 92, 83, 78, 80, 74, 73, 66, 78, 82, 68, 73, 59, 6…\n```\n:::\n:::\n<br>\n\n::: {.fragment}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-58_4f6d2670e31485ce6bc6a17ff09f3569'}\n\n```{.r .cell-code}\nmean(df_clean[[\"bp_systolic\"]], na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 121.5333\n```\n:::\n\n```{.r .cell-code}\nmean(df_clean[[\"bp_diastolic\"]], na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 76.36667\n```\n:::\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.fragment}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-59_5ed3d5c4d67338b0e4bb3ba739cd1d29'}\n\n```{.r .cell-code}\ndf_clean[[\"bp_systolic\"]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 114 132 124 144 122 121 133 116 118 122 126 114 118 106 112 114 124 120 119\n[20] 116 121 112 117 118 116 126 144 120 115 142\n```\n:::\n\n```{.r .cell-code}\ndf_clean[[\"bp_diastolic\"]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 72 86 92 83 78 80 74 73 66 78 82 68 73 59 69 76 80 68 77 74 80 58 67 73 74\n[26] 84 96 84 75 92\n```\n:::\n:::\n:::\n\n:::\n\n:::\n\n:::\n\n## Assigning labels\n\n\n::: panel-tabset\n\n### Problem\n\nWhat does anything mean?\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-60_6f23f567103fc91e85a77bd7e09dbed3'}\n\n```{.r .cell-code}\nview(df_clean)\n```\n:::\n\n<br>\n\n![](images/df_nolabels.PNG)\n\n### Solution 1\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-61_d9584672961eeecfcaef9cc9651eacec'}\n\n```{.r .cell-code}\n# first import codebook\ndf_codebook <- read_excel(\n  path = here(\"data\", \"messy_uc.xlsx\"),\n  sheet = \"Codebook\"\n)\ndf_codebook\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 33 × 5\n   Variable       Details                                      Units Range ...5 \n   <chr>          <chr>                                        <chr> <chr> <chr>\n 1 pat_id         Patient Identifier                           digi… 001-… <NA> \n 2 treatment      Treatment for UC                             <NA>  upad… <NA> \n 3 start_date     Date of start of treatment                   digi… YYYY… <NA> \n 4 ethnic         Ethnicity - hispanic or not hispanic         <NA>  hisp… <NA> \n 5 race           Race - one of 7 choices                      <NA>  cauc… <NA> \n 6 dob            date of birth                                digi… YYYY… <NA> \n 7 start_bp       blood pressure at start - systolic/diastolic mm Hg syst… <NA> \n 8 pre/post_wt_kg weight in kilograms at start/end             kilo… 48-1… <NA> \n 9 start_mes      Mayo endoscopic Score at start of treatment  poin… 0-3   <NA> \n10 start_bss      Bowel symptom score at start                 poin… 0-100 QOL …\n# ℹ 23 more rows\n```\n:::\n:::\n\n\n### Solution 2\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-62_7a5e8db6f0b1579b45f02baa5faf3fef'}\n\n```{.r .cell-code}\n# second create a named vector of variable names and variable labels\nvec_variables <- df_codebook |> \n  select(Variable, Details) |> \n  deframe()\n\nvec_variables\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                        pat_id \n                          \"Patient Identifier\" \n                                     treatment \n                            \"Treatment for UC\" \n                                    start_date \n                  \"Date of start of treatment\" \n                                        ethnic \n        \"Ethnicity - hispanic or not hispanic\" \n                                          race \n                     \"Race - one of 7 choices\" \n                                           dob \n                               \"date of birth\" \n                                      start_bp \n\"blood pressure at start - systolic/diastolic\" \n                                pre/post_wt_kg \n            \"weight in kilograms at start/end\" \n                                     start_mes \n \"Mayo endoscopic Score at start of treatment\" \n                                     start_bss \n                \"Bowel symptom score at start\" \n                                     start_abd \n            \"Abdominal symptom score at start\" \n                                     start_sys \n             \"Systemic symptom score at start\" \n                                  start_coping \n                       \"Coping score at start\" \n                                     start_emo \n            \"Emotional symptom score at start\" \n                                      start_dl \n       \"Impact on Daily living score at start\" \n                                     start_wbc \n    \"White blood cell count in blood at start\" \n                                     start_plt \n            \"Platelet count in blood at start\" \n                                      start_na \n              \"Sodium level in serum at start\" \n                                       start_k \n           \"Potassium level in serum at start\" \n                                     end_month \n                          \"Month of end visit\" \n                                       end_day \n                            \"Day of end visit\" \n                                      end_year \n                           \"Year of end visit\" \n                                       end_mes \n   \"Mayo endoscopic Score at end of treatment\" \n                                       end_bss \n                  \"Bowel symptom score at end\" \n                                       end_abd \n              \"Abdominal symptom score at end\" \n                                       end_sys \n               \"Systemic symptom score at end\" \n                                    end_coping \n                         \"Coping score at end\" \n                                       end_emo \n              \"Emotional symptom score at end\" \n                                        end_dl \n         \"Impact on Daily living score at end\" \n                                       end_wbc \n      \"White blood cell count in blood at end\" \n                                       end_plt \n              \"Platelet count in blood at end\" \n                                        end_na \n                \"Sodium level in serum at end\" \n                                         end_k \n             \"Potassium level in serum at end\" \n```\n:::\n:::\n\n### Solution 3\n\n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-63_bb5d0c0622030efa92d0dd0d680bce8c'}\n\n```{.r .cell-code  code-line-numbers=\"17,18|19,20,21,22,23,24,25,26\"}\n# assign labels to the data set\ndf_clean <- df_raw |>\n  janitor::clean_names() |> \n  janitor::remove_empty(which = c(\"rows\", \"cols\")) |> \n  mutate(\n    ethnic_clean = case_when(\n      ethnic %in%  c(\"hispanic\", \"Hispanic\", \"hispamnic\") ~ \"hispanic\",\n      ethnic %in%  c(\"NOT hispanic\", \"not hispanic\") ~ \"not hispanic\",\n    ) |> fct_infreq(),\n    end_na_clean = na_if(end_na, -99),\n    end_emo_clean = na_if(end_emo, \"not done\") |> as.numeric(),\n    start_na_clean = parse_number(start_na),\n    treatment = fct_relevel(treatment, \"upa\", \"uste\", \"oza\")\n    ) |>  \n  separate_wider_delim(start_bp, delim =\"/\", names = c(\"bp_systolic\", \"bp_diastolic\"), cols_remove = FALSE) |> \n  mutate(across(c(bp_systolic, bp_diastolic), as.numeric)) |> \n  # assign labels to all variables from the codebook\n  labelled::set_variable_labels(!!!vec_variables, .strict = FALSE) |> \n  # assign labels to new derived variables that did not exist in the code book\n  labelled::set_variable_labels(\n    ethnic_clean = \"Ethnicity\",\n    end_na_clean = \"Sodium level in serum at end\",\n    end_emo_clean = \"Emotional symptom score at end\",\n    bp_systolic = \"Systolic blood pressure\",\n    bp_diastolic = \"Diastolic blood pressure\"\n  )\n```\n:::\n\n### Confirm 1\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-64_a38384d51dd82d7f4d984dc0b4c499cd'}\n\n```{.r .cell-code}\n# view entire data set\ndf_clean |> view()\n```\n:::\n\n\n<br>\n\n![](images/df_yeslabels.PNG)\n\n### Confirm 2\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-65_fec3cb3579b4a6d0be5ed74c650511b4'}\n\n```{.r .cell-code}\n# view structure of data frame\ndf_clean |> str()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [30 × 43] (S3: tbl_df/tbl/data.frame)\n $ pat_id                          : chr [1:30] \"001\" \"002\" \"003\" \"004\" ...\n  ..- attr(*, \"label\")= chr \"Patient Identifier\"\n $ treatment                       : Factor w/ 3 levels \"upa\",\"uste\",\"oza\": 1 2 3 1 3 2 2 3 1 3 ...\n  ..- attr(*, \"label\")= chr \"Treatment for UC\"\n $ start_date                      : num [1:30] 44208 44215 44230 44245 44255 ...\n  ..- attr(*, \"label\")= chr \"Date of start of treatment\"\n $ ethnic                          : chr [1:30] \"hispanic\" \"not hispanic\" \"not hispanic\" \"not hispanic\" ...\n  ..- attr(*, \"label\")= chr \"Ethnicity - hispanic or not hispanic\"\n $ race                            : chr [1:30] \"Caucasian\" \"Caucasian\" \"African-American\" \"Caucasian\" ...\n  ..- attr(*, \"label\")= chr \"Race - one of 7 choices\"\n $ dob                             : POSIXct[1:30], format: \"2005-01-07\" \"1937-04-13\" ...\n $ bp_systolic                     : num [1:30] 114 132 124 144 122 121 133 116 118 122 ...\n  ..- attr(*, \"label\")= chr \"Systolic blood pressure\"\n $ bp_diastolic                    : num [1:30] 72 86 92 83 78 80 74 73 66 78 ...\n  ..- attr(*, \"label\")= chr \"Diastolic blood pressure\"\n $ start_bp                        : chr [1:30] \"114/72\" \"132/86\" \"124/92\" \"144/83\" ...\n  ..- attr(*, \"label\")= chr \"blood pressure at start - systolic/diastolic\"\n $ pre_post_wt_kg                  : chr [1:30] \"84/82\" \"77/77\" \"74/75\" \"66/65\" ...\n $ start_mes                       : num [1:30] 3 2 1 3 3 2 3 3 2 3 ...\n  ..- attr(*, \"label\")= chr \"Mayo endoscopic Score at start of treatment\"\n $ start_bss                       : num [1:30] 75.5 53.6 25.5 79.4 79.5 ...\n  ..- attr(*, \"label\")= chr \"Bowel symptom score at start\"\n $ start_abd_score                 : num [1:30] 80.6 53.6 26.2 77.9 78.4 ...\n $ start_sys                       : num [1:30] 81.5 52.6 27.6 79.8 79.2 ...\n  ..- attr(*, \"label\")= chr \"Systemic symptom score at start\"\n $ start_coping                    : num [1:30] 50.4 29.6 15.2 51.3 43.1 ...\n  ..- attr(*, \"label\")= chr \"Coping score at start\"\n $ start_emo                       : num [1:30] 73.3 55.7 36.6 80.8 72.5 ...\n  ..- attr(*, \"label\")= chr \"Emotional symptom score at start\"\n $ daily_life_impact_score_at_start: num [1:30] 86.9 56.1 31.4 84.9 87.3 ...\n $ start_wbc                       : num [1:30] 8.2 10.1 5.5 4.7 8.9 9.3 5.6 9.7 8.3 7.6 ...\n  ..- attr(*, \"label\")= chr \"White blood cell count in blood at start\"\n $ start_plt                       : chr [1:30] \"273K/microL\" \"414K/microL\" \"323K/microL\" \"389K/microL\" ...\n  ..- attr(*, \"label\")= chr \"Platelet count in blood at start\"\n $ start_na                        : chr [1:30] \"137mmol/L\" \"142mmol/L\" \"140mmol/L\" \"139mmol/L\" ...\n  ..- attr(*, \"label\")= chr \"Sodium level in serum at start\"\n $ start_k                         : chr [1:30] \"3.7\" \"4.0999999999999996\" \"4.3\" \"3.5\" ...\n  ..- attr(*, \"label\")= chr \"Potassium level in serum at start\"\n $ end_month                       : num [1:30] 6 6 7 7 7 8 8 8 8 8 ...\n  ..- attr(*, \"label\")= chr \"Month of end visit\"\n $ end_day                         : num [1:30] 14 21 6 22 30 4 10 15 22 26 ...\n  ..- attr(*, \"label\")= chr \"Day of end visit\"\n $ end_year                        : num [1:30] 2021 2021 2021 2021 2021 ...\n  ..- attr(*, \"label\")= chr \"Year of end visit\"\n $ end_mes                         : num [1:30] 0 1 1 1 2 1 2 2 0 1 ...\n  ..- attr(*, \"label\")= chr \"Mayo endoscopic Score at end of treatment\"\n $ end_bss                         : num [1:30] 9.46 31.62 25.53 35.37 57.53 ...\n  ..- attr(*, \"label\")= chr \"Bowel symptom score at end\"\n $ end_abd                         : num [1:30] 20.6 33.6 26.2 37.9 58.4 ...\n  ..- attr(*, \"label\")= chr \"Abdominal symptom score at end\"\n $ end_sys                         : num [1:30] 9.45 28.61 27.56 31.82 55.19 ...\n  ..- attr(*, \"label\")= chr \"Systemic symptom score at end\"\n $ end_coping                      : num [1:30] 23.4 20.6 15.2 33.3 34.1 ...\n  ..- attr(*, \"label\")= chr \"Coping score at end\"\n $ end_emo                         : chr [1:30] \"31.980531232702354\" \"43.154961592472482\" \"36.881123946451076\" \"58.670309483569042\" ...\n  ..- attr(*, \"label\")= chr \"Emotional symptom score at end\"\n $ end_dl                          : chr [1:30] \"6.6605585857717573\" \"30.539178998046562\" \"32.798667784920319\" \"33.781373664703942\" ...\n  ..- attr(*, \"label\")= chr \"Impact on Daily living score at end\"\n $ end_wbc                         : num [1:30] 8.56 11.14 3 5.69 4.8 ...\n  ..- attr(*, \"label\")= chr \"White blood cell count in blood at end\"\n $ end_plt                         : num [1:30] 201 340 256 327 432 348 181 128 135 238 ...\n  ..- attr(*, \"label\")= chr \"Platelet count in blood at end\"\n $ end_na                          : num [1:30] 137 142 140 139 144 ...\n  ..- attr(*, \"label\")= chr \"Sodium level in serum at end\"\n $ end_k                           : num [1:30] 3.74 4.15 4.47 3.64 4.21 ...\n  ..- attr(*, \"label\")= chr \"Potassium level in serum at end\"\n $ fake_street                     : chr [1:30] \"990 Mohammad Mountain\" \"8512 O'Connell Valley\" \"777 Ledner Mall\" \"690 Andres Village\" ...\n $ fake_city                       : chr [1:30] \"North Sigmundville\" \"Port Halstad\" \"Croninton\" \"South Isaac\" ...\n $ fake_state                      : chr [1:30] \"New Mexico\" \"Missouri\" \"South Carolina\" \"Montana\" ...\n $ fake_zip                        : num [1:30] 96074 11264 57246 31457 30711 ...\n $ ethnic_clean                    : Factor w/ 2 levels \"not hispanic\",..: 2 1 1 1 1 1 1 2 1 2 ...\n  ..- attr(*, \"label\")= chr \"Ethnicity\"\n $ end_na_clean                    : num [1:30] 137 142 140 139 144 ...\n  ..- attr(*, \"label\")= chr \"Sodium level in serum at end\"\n $ end_emo_clean                   : num [1:30] 32 43.2 36.9 58.7 58.9 ...\n  ..- attr(*, \"label\")= chr \"Emotional symptom score at end\"\n $ start_na_clean                  : num [1:30] 137 142 140 139 144 145 142 138 140 137 ...\n```\n:::\n:::\n\n:::\n\n# Wrangling your Data\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-66_17d6ba5635c9200f1b892f21ada49c65'}\n\n:::\n## Deciding on the Unit of Observation\n\n-   In Prospective Data Collection, a patient arrives for a visit. All data collected are part of the same observation/visit.\n    -   Alternatively, we can divide a visit into distinct observations, like blood pressure, a PHQ-9 depression questionnaire, and a hemoglobin measurement (all on the same date)\n-   In retrospective data review, we can divide the observations up as we choose. For inpatient stays, we need to decide *a priori* on how to handle multiple observations of the same type (e.g., vitals q6h) in the same day.\n    -   use the 0800 observation each day?\n    -   use the daily average?\n    -   use the max values each day?\n\n## What is the Unit of Analysis?\n\n-   While the unit of observation may be straightforward for outpatient visits, and complicated for inpatient stays, in the end we need to select a Unit of Analysis\n-   This Unit of Analysis usually depends on the **Question** we want to ask\n\n## Is the Unit of Analysis the Patient?\n\n-   Did the patient die?\n-   Did the patient have the outcome of colectomy?\n-   Did the patient reach disease remission?\n\n## Is the Unit of Analysis the Visit/Encounter?\n\n-   Often these are within-patient outcomes\n    -   Did the C-reactive protein improve from Week 0 to Week 8?\n    -   Did the number of sickle cell crises/year decrease after CRISPR gene therapy?\n    -   Did the endoscopic ulcer score decrease on the experimental therapy vs placebo?\n\n## Reshaping your data with tidyr\n\n-   We often enter data by patient\n-   Spreadsheets encourage us to enter longitudinal data as long rows (per patient)\n-   We end up with wide data\n\n\\[Image\\]\n\n## Reshaping your data with tidyr\n\n-   R (and most R functions) are vectorized to handle tall data\n-   One small observation per row\n-   Lots of analyses in R are easier with tall data\n\n\\[Image\\]\n\n## Pivoting Longer (common)\n\n-   We need to 'pivot' data from wide to tall on the regular\n-   This \"lengthens\" data, increasing the number of rows, and decreasing the number of columns\n-   We will be looking at Visit Dates/Measures\n\n## Pivoting Longer\n\n-   Arguments: data, cols, names_to, values_to, and many optional arguments\n-   Details from the tidyverse help page are [here](https://tidyr.tidyverse.org/reference/pivot_longer.html)\n-   **data** is your dataframe/tibble - you can pipe this in\n-   **cols** = columns to pivot, as a vector of names, or by number, or selected with [tidyselect](https://tidyselect.r-lib.org) functions\n-   **names_to** = A character vector specifying the new column or columns to create from the information stored in the column names of data specified by cols.\n-   **values_to** = A string specifying the name of the column to create from the data stored in cell values.\n\n## Pivoting Longer (Example)\n\nLet's start with the wide version (selected columns from messy_uc)\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-67_501e0bb830a5075b9ae158eeabbaaf21'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 8\n   pat_id treatment start_mes end_mes start_bss end_bss start_emo end_emo\n   <chr>  <chr>         <dbl>   <dbl>     <dbl>   <dbl>     <dbl>   <dbl>\n 1 001    upa               3       0      75.5    9.46      73.3    32.0\n 2 002    uste              2       1      53.6   31.6       55.7    43.2\n 3 003    oza               1       1      25.5   25.5       36.6    36.9\n 4 004    upa               3       1      79.4   35.4       80.8    58.7\n 5 005    oza               3       2      79.5   57.5       72.5    58.9\n 6 006    uste              2       1      54.5   32.5       48.3    34.6\n 7 007    uste              3       2      79.0   57.0       72.7    63.3\n 8 008    oza               3       2      79.0   57.0       74.6    65.3\n 9 009    upa               2       0      53.1    9.06      54.2    28.0\n10 010    oza               3       1      77.4   33.4       74.4    46.8\n# ℹ 20 more rows\n```\n:::\n:::\n\n-    Note that there are 30 rows, one per patient, with 6 measured quantities for each patient.\n\n## Pivoting Longer (Example)\n\nThis is the tall version we want to end up with.\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-68_2b88836ccb16db5fc32049b18e052125'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 180 × 4\n   pat_id treatment measure   score\n   <chr>  <chr>     <chr>     <dbl>\n 1 001    upa       start_mes  3   \n 2 001    upa       end_mes    0   \n 3 001    upa       start_bss 75.5 \n 4 001    upa       end_bss    9.46\n 5 001    upa       start_emo 73.3 \n 6 001    upa       end_emo   32.0 \n 7 002    uste      start_mes  2   \n 8 002    uste      end_mes    1   \n 9 002    uste      start_bss 53.6 \n10 002    uste      end_bss   31.6 \n# ℹ 170 more rows\n```\n:::\n:::\n\n-    Note that there now 180 rows (30\\*6), with one row per observation measure.\n\n## Doing the pivot_longer()\n\nWhat values do we want for these key arguments?\n\n-   cols\n-   names_to\n-   values_to\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-69_58546e76f68d317219345b56e2f5005c'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 8\n   pat_id treatment start_mes end_mes start_bss end_bss start_emo end_emo\n   <chr>  <chr>         <dbl>   <dbl>     <dbl>   <dbl>     <dbl>   <dbl>\n 1 001    upa               3       0      75.5    9.46      73.3    32.0\n 2 002    uste              2       1      53.6   31.6       55.7    43.2\n 3 003    oza               1       1      25.5   25.5       36.6    36.9\n 4 004    upa               3       1      79.4   35.4       80.8    58.7\n 5 005    oza               3       2      79.5   57.5       72.5    58.9\n 6 006    uste              2       1      54.5   32.5       48.3    34.6\n 7 007    uste              3       2      79.0   57.0       72.7    63.3\n 8 008    oza               3       2      79.0   57.0       74.6    65.3\n 9 009    upa               2       0      53.1    9.06      54.2    28.0\n10 010    oza               3       1      77.4   33.4       74.4    46.8\n# ℹ 20 more rows\n```\n:::\n:::\n\n## Pivoting Longer In Action\n\n::: panel-tabset\n### Problem: Wide\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-70_ca69042b710f115f87f78425df0e8bef'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 8\n   pat_id treatment start_mes end_mes start_bss end_bss start_emo end_emo\n   <chr>  <chr>         <dbl>   <dbl>     <dbl>   <dbl>     <dbl>   <dbl>\n 1 001    upa               3       0      75.5    9.46      73.3    32.0\n 2 002    uste              2       1      53.6   31.6       55.7    43.2\n 3 003    oza               1       1      25.5   25.5       36.6    36.9\n 4 004    upa               3       1      79.4   35.4       80.8    58.7\n 5 005    oza               3       2      79.5   57.5       72.5    58.9\n 6 006    uste              2       1      54.5   32.5       48.3    34.6\n 7 007    uste              3       2      79.0   57.0       72.7    63.3\n 8 008    oza               3       2      79.0   57.0       74.6    65.3\n 9 009    upa               2       0      53.1    9.06      54.2    28.0\n10 010    oza               3       1      77.4   33.4       74.4    46.8\n# ℹ 20 more rows\n```\n:::\n:::\n\n### Code: pivot_longer\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-71_2681229ce9b83f88506d558eb23e5696'}\n\n```{.r .cell-code}\nwide |> \n  pivot_longer(\n    cols = \"start_mes\":\"end_emo\", \n    # could also use 3:8\n               names_to = \"measure\",\n               values_to = \"score\")\n```\n:::\n\n### Result: Tall\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-72_2dc3ebb22be2e7b2459787d5d0e6054e'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 180 × 4\n   pat_id treatment measure   score\n   <chr>  <chr>     <chr>     <dbl>\n 1 001    upa       start_mes  3   \n 2 001    upa       end_mes    0   \n 3 001    upa       start_bss 75.5 \n 4 001    upa       end_bss    9.46\n 5 001    upa       start_emo 73.3 \n 6 001    upa       end_emo   32.0 \n 7 002    uste      start_mes  2   \n 8 002    uste      end_mes    1   \n 9 002    uste      start_bss 53.6 \n10 002    uste      end_bss   31.6 \n# ℹ 170 more rows\n```\n:::\n:::\n:::\n\n## One Minor Issue - Separation of measure\n\n::: panel-tabset\n### Problem\n\n-   the \"measure\" column combines a timepoint and the measure\n-   Needs to be separated.\n-   You already know how to use *separate()*\n-   Arguments\n    -   col\n    -   sep\n    -   into\n\n### Code\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-73_74e1eb910910ff3780478dd2abcbd64b'}\n\n```{.r .cell-code}\ntall |> \n  separate(col = \"measure\",\n           sep = \"_\",\n           into = c(\"timept\", \"measure\"))\n```\n:::\n\n### Result\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-74_911dfcf8547e48f7d3d89b189e49faf7'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 180 × 5\n   pat_id treatment timept measure score\n   <chr>  <chr>     <chr>  <chr>   <dbl>\n 1 001    upa       start  mes      3   \n 2 001    upa       end    mes      0   \n 3 001    upa       start  bss     75.5 \n 4 001    upa       end    bss      9.46\n 5 001    upa       start  emo     73.3 \n 6 001    upa       end    emo     32.0 \n 7 002    uste      start  mes      2   \n 8 002    uste      end    mes      1   \n 9 002    uste      start  bss     53.6 \n10 002    uste      end    bss     31.6 \n# ℹ 170 more rows\n```\n:::\n:::\n\n### Alternative within pivot_longer\n\n- You can do this _within_ pivot_longer with one more argument\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-75_8f0df26cb3838b085f714a5849f4713d'}\n\n```{.r .cell-code}\nwide |> \n  pivot_longer(cols = 3:8,\n    names_to = c(\"timept\", \"measure\"),\n    names_sep = \"_\",\n    values_to = \"score\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 180 × 5\n   pat_id treatment timept measure score\n   <chr>  <chr>     <chr>  <chr>   <dbl>\n 1 001    upa       start  mes      3   \n 2 001    upa       end    mes      0   \n 3 001    upa       start  bss     75.5 \n 4 001    upa       end    bss      9.46\n 5 001    upa       start  emo     73.3 \n 6 001    upa       end    emo     32.0 \n 7 002    uste      start  mes      2   \n 8 002    uste      end    mes      1   \n 9 002    uste      start  bss     53.6 \n10 002    uste      end    bss     31.6 \n# ℹ 170 more rows\n```\n:::\n:::\n\n:::\n\n## Pivoting Longer\n\n-   Your Turn (Exercise) with endo_data\n- Measurements of Trans-Epithelial Electrical Resistance (the inverse of leakiness) were taken from biopsies of 3 segments of intestine.\n- This might be affected by portal hypertension in patients with liver cirrhosis\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-76_6471b032d6750c834654b22f6134227a'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n   pat_id portal_htn duod_teer ileal_teer colon_teer\n    <dbl>      <dbl>     <dbl>      <dbl>      <dbl>\n 1      1          1      4.33       14.6       16.2\n 2      2          0     11.7        16.0       19.0\n 3      3          1      4.12       13.8       15.2\n 4      4          1      4.62       16.4       18.1\n 5      5          0     12.4        15.8       19.0\n 6      6          0     13.0        16.2       18.8\n 7      7          0     11.9        15.7       18.3\n 8      8          1      4.87       16.6       18.8\n 9      9          1      4.23       15.0       16.9\n10     10          0     12.8        16.7       19.1\n```\n:::\n:::\n\n\n## Pivoting Longer with endo_data\n\n::: panel-tabset\n\n### The Dataset\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-77_29755fc4250ba909711a5bf7ba2673c8'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n   pat_id portal_htn duod_teer ileal_teer colon_teer\n    <dbl>      <dbl>     <dbl>      <dbl>      <dbl>\n 1      1          1      4.33       14.6       16.2\n 2      2          0     11.7        16.0       19.0\n 3      3          1      4.12       13.8       15.2\n 4      4          1      4.62       16.4       18.1\n 5      5          0     12.4        15.8       19.0\n 6      6          0     13.0        16.2       18.8\n 7      7          0     11.9        15.7       18.3\n 8      8          1      4.87       16.6       18.8\n 9      9          1      4.23       15.0       16.9\n10     10          0     12.8        16.7       19.1\n```\n:::\n:::\n\n### The Arguments\n\n- What values do you want to use for:\n  - cols\n  - names_pattern = \"(.+)_teer\"\n  - names_to\n  - values_to\n- Note that we are giving you the value for names_pattern, which means that we want to keep the characters of the name (of whatever length) before \"_teer\"\n\n### The Code\n\n- Fill in the blanks to pivot this dataset to tall format, with columns for the intestinal location and the teer value.\n- Note that we are giving you names_pattern\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-78_3a055a5bf7f2fbe0422d1eae02461c8d'}\n\n```{.r .cell-code}\nendo_data |> \n  pivot_longer(\n    cols =  ,\n    names_pattern = \"(.+)_teer\",\n    names_to =   ,\n    values_to = \n  )\n```\n:::\n\n### The Solution\n\n- Fill in the blanks to pivot this dataset to tall format, with columns for the intestinal location and the teer value.\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-79_c82390457a46d0d8e49e92f6fb98d764'}\n\n```{.r .cell-code}\nendo_data |> \n  pivot_longer(\n    cols = \"duod_teer\":\"colon_teer\",\n    names_pattern = \"(.+)_teer\",\n    names_to = c(\"location\"),\n    values_to = \"teer\"\n  )\n```\n:::\n\n- Run the code, and look at the resulting table.\n- Do you think that portal hypertension has an effect on TEER and (its inverse) epithelial leakiness?\n\n:::\n\n## Pivoting Wider\n\n::: panel-tabset\n\n### Tall messy_uc Data\n-   Wide data is less common, but sometimes needed\n- Here we will convert the tall version of our selected messy_uc data back to wide.\n- This is what the tall data look like\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-80_3d18aaed1f30582e198a0fde57398c72'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 180 × 4\n   pat_id treatment measure   score\n   <chr>  <chr>     <chr>     <dbl>\n 1 001    upa       start_mes  3   \n 2 001    upa       end_mes    0   \n 3 001    upa       start_bss 75.5 \n 4 001    upa       end_bss    9.46\n 5 001    upa       start_emo 73.3 \n 6 001    upa       end_emo   32.0 \n 7 002    uste      start_mes  2   \n 8 002    uste      end_mes    1   \n 9 002    uste      start_bss 53.6 \n10 002    uste      end_bss   31.6 \n# ℹ 170 more rows\n```\n:::\n:::\n\n### Code\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-81_6516f6dee0f1239b611388d7b49d5b1d'}\n\n```{.r .cell-code}\ntall |> \n  pivot_wider(\n    id_cols = c(pat_id, treatment), # Variables not pivoted\n    names_from = measure, # will become column names\n    values_from = score # will become values\n  )\n```\n:::\n\n### Wider Result\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-82_abae407884b21a515720886a93ab52cb'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 8\n   pat_id treatment start_mes end_mes start_bss end_bss start_emo end_emo\n   <chr>  <chr>         <dbl>   <dbl>     <dbl>   <dbl>     <dbl>   <dbl>\n 1 001    upa               3       0      75.5    9.46      73.3    32.0\n 2 002    uste              2       1      53.6   31.6       55.7    43.2\n 3 003    oza               1       1      25.5   25.5       36.6    36.9\n 4 004    upa               3       1      79.4   35.4       80.8    58.7\n 5 005    oza               3       2      79.5   57.5       72.5    58.9\n 6 006    uste              2       1      54.5   32.5       48.3    34.6\n 7 007    uste              3       2      79.0   57.0       72.7    63.3\n 8 008    oza               3       2      79.0   57.0       74.6    65.3\n 9 009    upa               2       0      53.1    9.06      54.2    28.0\n10 010    oza               3       1      77.4   33.4       74.4    46.8\n# ℹ 20 more rows\n```\n:::\n:::\n\n:::\n\n# Filling in Unobserved Dates/Times with padr\n\n::: columns\n::: {.column width=\"55%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-83_3720734e474bb88eda4ab73764ac1366'}\n\n```{.r .cell-code}\nlibrary(padr)\nlibrary(tidyverse)\nemergency <- padr::emergency\nhead(emergency) |>  \n  select(title, time_stamp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  title                   time_stamp         \n  <chr>                   <dttm>             \n1 EMS: BACK PAINS/INJURY  2015-12-10 17:40:00\n2 EMS: DIABETIC EMERGENCY 2015-12-10 17:40:00\n3 Fire: GAS-ODOR/LEAK     2015-12-10 17:40:00\n4 EMS: CARDIAC EMERGENCY  2015-12-10 17:40:01\n5 EMS: DIZZINESS          2015-12-10 17:40:01\n6 EMS: HEAD INJURY        2015-12-10 17:40:01\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"45%\"}\n- The emergency data set contains > 120K emergency calls from Montgomery County, PA over a period of ~ 11 months.\n- Each call has a title and a timestamp\n\n:::\n\n:::\n\n## Thickening Time to a Usable Level\n\n::: panel-tabset\n\n### Goal\n- The thicken function adds a column to a data frame that is of a higher interval than the original variable.\n- The variable **time_stamp** has the interval of seconds\n- We can thicken the data to day, or to week, or to month.\n\n### Code\n- We will thicken to month\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-84_87bc2b721519f631a33218ad07f4022b'}\n\n```{.r .cell-code}\nemergency |> \n  thicken('month')\n```\n:::\n\n### Result\n- This lets us count events like overdoses by month with time_stamp_month.\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-85_f7e7eb58e714dcc723b5f261d72bf3a4'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120,450 × 7\n     lat   lng   zip title            time_stamp          twp   time_stamp_month\n   <dbl> <dbl> <int> <chr>            <dttm>              <chr> <date>          \n 1  40.3 -75.6 19525 EMS: BACK PAINS… 2015-12-10 17:40:00 NEW … 2015-12-01      \n 2  40.3 -75.3 19446 EMS: DIABETIC E… 2015-12-10 17:40:00 HATF… 2015-12-01      \n 3  40.1 -75.4 19401 Fire: GAS-ODOR/… 2015-12-10 17:40:00 NORR… 2015-12-01      \n 4  40.1 -75.3 19401 EMS: CARDIAC EM… 2015-12-10 17:40:01 NORR… 2015-12-01      \n 5  40.3 -75.6    NA EMS: DIZZINESS   2015-12-10 17:40:01 LOWE… 2015-12-01      \n 6  40.3 -75.3 19446 EMS: HEAD INJURY 2015-12-10 17:40:01 LANS… 2015-12-01      \n 7  40.2 -75.1 19044 EMS: NAUSEA/VOM… 2015-12-10 17:40:01 HORS… 2015-12-01      \n 8  40.2 -75.4 19426 EMS: RESPIRATOR… 2015-12-10 17:40:01 SKIP… 2015-12-01      \n 9  40.3 -75.4 19438 EMS: SYNCOPAL E… 2015-12-10 17:40:01 LOWE… 2015-12-01      \n10  40.1 -75.3 19462 Traffic: VEHICL… 2015-12-10 17:40:01 PLYM… 2015-12-01      \n# ℹ 120,440 more rows\n```\n:::\n:::\n\n:::\n\n## Padding unobserved dates (weekends?)\n\n::: columns\n::: {.column width=\"60%\"}\n\n- The pad function allows you to fill in missing intervals.\n- As an example, my hospital only runs fecal calprotectin tests on weekdays.\n- This can lead to weird discontinuities in data over a weekend (Dec 3-4).\n- No observations on weekend days.\n\n:::\n\n::: {.column width=\"40%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-86_c2201b24b0e44215e1444fb6b3e1ef9e'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15 × 3\n   pat_id date         fcp\n   <chr>  <date>     <dbl>\n 1 001    2022-12-01  1574\n 2 001    2022-12-02  1323\n 3 001    2022-12-05   673\n 4 001    2022-12-06   314\n 5 001    2022-12-07   168\n 6 002    2022-11-30  1393\n 7 002    2022-12-01  1014\n 8 002    2022-12-02   812\n 9 002    2022-12-05   247\n10 002    2022-12-06   118\n11 003    2022-12-02   987\n12 003    2022-12-05   438\n13 003    2022-12-06   312\n14 003    2022-12-05   194\n15 003    2022-12-06   101\n```\n:::\n:::\n\n:::\n\n:::\n\n## Padding Unobserved Times\n\n::: panel-tabset\n\n### The Problem\n\n- We can fill in (pad) the unobserved weekend days with the **pad()** function.\n\n### The Code\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-87_e4a9c19d8491c772d9e5c13f1b188833'}\n\n```{.r .cell-code}\nfcp |> \n  pad(group = \"pat_id\") |> \n  tidyr::fill(pat_id) |> \n  print(n = 14)\n```\n:::\n\n### The Result\n\n::: columns\n\n::: {.column width=\"40%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-88_9bd183ae5403a5e458c8f68a7d6a39bc'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 21 × 3\n   pat_id date         fcp\n   <chr>  <date>     <dbl>\n 1 001    2022-12-01  1574\n 2 001    2022-12-02  1323\n 3 001    2022-12-03    NA\n 4 001    2022-12-04    NA\n 5 001    2022-12-05   673\n 6 001    2022-12-06   314\n 7 001    2022-12-07   168\n 8 002    2022-11-30  1393\n 9 002    2022-12-01  1014\n10 002    2022-12-02   812\n11 002    2022-12-03    NA\n12 002    2022-12-04    NA\n13 002    2022-12-05   247\n14 002    2022-12-06   118\n# ℹ 7 more rows\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"60%\"}\n\n- New observations are created on the missing dates\n- NAs are filled in for the missing FCPs, with one for each day and group (pat_id)\n- we used **tidyr::fill(pat_id)** to fill in the missing pat_ids\n\n:::\n\n:::\n\n:::\n\n## Joins of data from different sources\n\n- We often collect data from different sources that we later want to join together for analysis\n  - Data from local Electronic Medical Record\n  - Data from the CDC\n  - Data from the US Census\n- External data can illuminate our understanding of our local patient data\n\n## Local Demographics with CDC SVI data \n\n::: panel-tabset\n\n### The Problem\n\n::: columns\n::: {.column width=\"60%\"}\n\n- We have 2 datasets, one local Demographics and Census Tract, and one from the CDC that has values for Social Vulnerability Index by Census Tract\n- We want to know the median SVI for the neighborhood of each patient\n- We need to left_join these datasets together by matching on the Census Tract\n\n:::\n\n::: {.column width=\"40%\"}\n\n![Joins](images/joins.png)\n\n:::\n\n:::\n\n\n### The Code\n\n\n### The Result\n\n:::\n\n## Patient Demographics with Lab results (one to many)\n\n## Thank you!\n\n🙏 [Click here to submit workshop feedback](https://forms.gle/kvEirN7sJmavem8q6){target=\"_blank\"}\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\r\n"
      ],
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}